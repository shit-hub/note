<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基本环境 on Gopher笔记</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/</link><description>Recent content in 基本环境 on Gopher笔记</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/index.xml" rel="self" type="application/rss+xml"/><item><title>安装</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%AE%89%E8%A3%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%AE%89%E8%A3%85/</guid><description>下载 # Go 官方下载地址：
https://go.dev/dl/ https://developer.apple.com/download/all/ 安装 # MacOS 下载后按正常程序安装即可， 默认安装路径：/usr/local Linux 安装依赖（以 ubuntu 为例）
sudo apt-get install mercurial git gcc 下载 Go 的压缩包
wget https://go.dev/dl/go1.17.8.linux-amd64.tar.gz tar -C /usr/local -xzf https://go.dev/dl/go1.17.8.linux-amd64.tar.gz 在/etc/profile添加以下环境变量
export GOROOT=/usr/local/go export PATH=$GOROOT/bin:$PATH export GOPATH=/home/go # Go1.12之后可不设置 使环境变量生效
source /etc/profile Windows 下载后按正常程序安装，默认安装在ProgramFiles或者ProgramFiles(x86)，可视情况修改。 打开环境变量设置：我的电脑 -&amp;gt; 属性 -&amp;gt; 高级设置 -&amp;gt; 环境变量 设置以下环境变量 GOROOT：设置为 Go 的安装路径 path：%GOROOT%\bin GOPATH：放工程的目录（Go1.12 之后可不设置） 验证 # 命令行运行go version查看是否正常输出
参考链接： https://go.dev/doc/install</description></item><item><title>环境变量</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid><description>查看 Go 相关的环境变量 # go env 设置方法 # Go version &amp;gt;= 1.13 # go env -w &amp;lt;环境变量名&amp;gt;=&amp;lt;值&amp;gt; Go version &amp;lt; 1.13 # MacOS 在~/.profile添加环境变量 export &amp;lt;环境变量名&amp;gt;=&amp;lt;值&amp;gt; 使环境变量生效 source /etc/profile Linux 在/etc/profile添加环境变量 export &amp;lt;环境变量名&amp;gt;=&amp;lt;值&amp;gt; 使环境变量生效 source /etc/profile Windows 我的电脑 -&amp;gt; 属性 -&amp;gt; 高级设置 -&amp;gt; 环境变量 环境变量参考 # 关于默认值：* 代表视情况而定，- 代表空值
通用 # 变量名 默认 描述 GO111MODULE auto 控制GO命令是在module aware模式下运行还是在GOPATH模式下运行。参考： https://golang.org/ref/mod#mod-commands. 可用值：on/off/auto GCCGO gccgo 运行go build -compiler=gccgo时的gccgo命令 GOARCH * 要为其编译代码的体系结构或处理器。 GOBIN - go install安装命令的目录。 GOCACHE * 将在其中存储缓存信息以便在将来的构建中重复使用的目录。 GOMODCACHE $GOPATH/mod 将存储下载的模块的目录。 GODEBUG - 使能各种调试信息。参考go doc runtime。 GOENV * 环境配置文件所在的路径，不能使用go wnv -w设置 GOFLAGS - 空格分隔的-flag=value列表，用于各种go命令，可被覆盖如果命令中有flag列表 GOINSECURE - 逗号分隔的模块路径前缀列表，应始终以不安全的方式获取。但仅适用于直接提取的依赖项。GOINSECURE不禁用校验和数据库验证。可以使用GOPRIVATE或GONOSUMDB来实现这一点。 GOOS * 要为其编译代码的操作系统。比如：linux, darwin, windows, netbsd GOPATH * GOPATH模式下，Go的工程代码路径。 GOPROXY https://goproxy.</description></item><item><title>Go Module 加速</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/go-module%E6%BA%90%E5%8A%A0%E9%80%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/go-module%E6%BA%90%E5%8A%A0%E9%80%9F/</guid><description>代理源 # Goproxy 中国 # 中国最可靠的 Go 模块代理。
Goproxy 中国完全实现了 Go 的 模块代理协议。并且它是一个由中国备受信赖的云服务提供商 七牛云支持的非营利性项目。我们的目标是为中国和世界上其他地方的 Gopher 们提供一个免费的、可靠的、持续在线的且经过 CDN 加速的模块代理。请在 status.goproxy.cn 订阅我们的有关系统性能的实时和历史数据。
请注意，Goproxy 中国只专注于服务在 https://goproxy.cn 的 Web 应用本身的开发。如果你正在寻找一种极其简单的方法来搭建你自己的 Go 模块代理，那么你应该看一下 Goproxy，Goproxy 中国就是基于它开发的。
代理地址： https://goproxy.cn
阿里云 Go Module 代理仓库服务 # go module 公共代理仓库，代理并缓存 go 模块。你可以利用该代理来避免 DNS 污染导致的模块拉取缓慢或失败的问题，加速你的构建
代理地址： https://mirrors.aliyun.com/goproxy/
用法 # 设置以下两个环境变量
GO111MODULE=on # Go1.16之后默认开启，可以不设置 GOPROXY=https://goproxy.cn,direct 设置方法参考 环境变量</description></item><item><title>卸载</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%8D%B8%E8%BD%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%8D%B8%E8%BD%BD/</guid><description>Linux/MacOS/FreeBSD 删除 go 目录，默认是/use/local/go 删除环境变量 Windows 进入控制面板，点击添加/卸载程序 选择 Go，右键卸载 删除相关的环境变量 或者在命令行使用以下命令： msiexec /x go{{version}}.windows-{{cpu-arch}}.msi /q 这个命令可以自动清除安装时创建的环境变量
参考链接： https://go.dev/doc/manage-install#uninstalling</description></item><item><title>快速入门</title><link>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://note.shit-hub.com/docs/dev/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid><description>创建工程/模块 # 创建目录
mkdir test cd test 开启依赖管理
基本工程 go mod init test test 为工程名，也可使用 example/test 这种多层形式
基本模块 go mod init example.com/test 模块开头必须是域名，别的工程引用时会通过域名去查找模块
创建代码文件
touch main.go 编辑文件
工程示例代码： package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;Hello, World!&amp;#34;) } 模块示例代码： package greetings import &amp;#34;fmt&amp;#34; // Hello returns a greeting for the named person. func Hello(name string) string { // Return a greeting that embeds the name in a message. message := fmt.</description></item></channel></rss>